# vi: sw=4 ts=4

record(motor, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr") {
  field(DESC, "$(DESC)")
  field(DTYP, "$(DTYP)")
  field(DIR, "$(DIR)")
  field(VELO, "$(VELO)")
  field(VBAS, "$(VBAS)")
  field(ACCL, "$(ACCL)")
  field(BDST, "$(BDST)")
  field(BVEL, "$(BVEL)")
  field(BACC, "$(BACC)")
  field(OUT,"@asyn($(PORT),$(ADDR))")
  field(MRES, "$(MRES)")
  field(PREC, "$(PREC)")
  field(EGU, "$(EGU)")
  field(DHLM, "$(DHLM)")
  field(DLLM, "$(DLLM)")
  field(INIT, "$(INIT)")
  field(TWV, "1")

  info(autosaveFields_pass0, "DVAL DIR DHLM DLLM TWV SREV MRES ERES RRES VBAS VELO VMAX ACCL BDST BVEL BACC RDBD DESC EGU RTRY UEIP URIP DLY RDBL PREC DISA DISP FOFF OFF FRAC OMSL JVEL JAR PCOF ICOF DCOF HVEL NTM NTMF")
  info(autosaveFields_pass1, "DIR DHLM DLLM TWV SREV MRES ERES RRES VBAS VELO VMAX ACCL BDST BVEL BACC RDBD DESC EGU RTRY UEIP URIP DLY RDBL PREC DISA DISP FOFF OFF FRAC OMSL JVEL JAR PCOF ICOF DCOF HVEL NTM NTMF")
}

record(transform, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr_ableput") {
  field(CLCB, "a")
  field(CLCC, "a")
  field(OUTA, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.DISA NPP NMS")
  field(OUTB, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.DISP NPP NMS")
  field(OUTC, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.DISA NPP NMS")
}

record(bo, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr_able") {
  field(DESC, "motor enable")
  field(PINI, "YES")
  field(OUT, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr_ableput.A PP MS")
  field(ZNAM, "Enable")
  field(ONAM, "Disable")
}

# allow users to change the velocity (or speed)
# by sending a multipler to the
#    $(Sys){$(Dev)-Ax:$(Ax)}Mtr_vCh.A field
# Range check output; SBAS <= S <= SMAX.
record(scalcout, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr_vCh") {
  field(DESC, "change velocity")
  field(INPB, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.S")
  field(INPC, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.SBAS")
  field(INPD, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.SMAX")
  field(CALC, "min(max(a*b,c),d)")
  field(OUT, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.S")
}

# allow users to change the tweak value
# by sending a multipler to the
#    $(Sys){$(Dev)-Ax:$(Ax)}Mtr_twCh.A field
# Range check output; TWV <= HLM - LLM.
record(scalcout, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr_twCh") {
  field(DESC, "change TWV")
  field(INPB, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.TWV")
  field(INPC, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.MRES")
  field(INPD, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.HLM")
  field(INPE, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.LLM")
  field(CALC, "min(max(a*b,c),d-e)")
  field(OUT, "$(Sys){$(Dev)-Ax:$(Ax)}Mtr.TWV")
}


## Move current
record(ao, "$(Sys){$(Dev)-Ax:$(Ax)}MoveCur-SP") {
    field(DESC, "Move current")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_MOVE_I")
    field(FLNK, "$(Sys){$(Dev)-Ax:$(Ax)}MoveCur-I")
    field(EGU,  "A")
    field(PREC, 1)
    field(LOPR, 0)
    field(HOPR, 2.0)
    field(VAL,  0.2)
    field(PINI, "YES")
 
    info(autosaveFields_pass0, "VAL HOPR LOPR")
    info(autosaveFields_pass1, "VAL HOPR LOPR")
}

record(ai, "$(Sys){$(Dev)-Ax:$(Ax)}MoveCur-I") {
    field(DESC, "Move current")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_MOVE_I")
    field(EGU,  "A")
    field(PREC, 1)
    field(LOPR, 0)
    field(HOPR, 2.0)
}

## Hold current
record(ao, "$(Sys){$(Dev)-Ax:$(Ax)}HoldCur-SP") {
    field(DESC, "Hold current")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_HOLD_I")
    field(FLNK, "$(Sys){$(Dev)-Ax:$(Ax)}HoldCur-I")
    field(EGU,  "A")
    field(PINI, "YES")
    
    field(PREC, 1)
    field(LOPR, 0)
    field(HOPR, 2.0)
    field(VAL, 0.0)
    info(autosaveFields_pass0, "VAL HOPR LOPR")
    info(autosaveFields_pass1, "VAL HOPR LOPR")
}

record(ai, "$(Sys){$(Dev)-Ax:$(Ax)}HoldCur-I") {
    field(DESC, "Hold current")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_HOLD_I")
    field(EGU,  "A")

    field(PREC, 1)
    field(LOPR, 0)
    field(HOPR, 2.0)
}

# Limit thresholds (Low)
record(ai, "$(Sys){$(Dev)-Ax:$(Ax)}LowThresh-I") {
    field(DESC, "Low limit threshold")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_LIMIT_THRESH_LOW")
    field(EGU,  "V")
    field(PREC, 2)
}
record(ao, "$(Sys){$(Dev)-Ax:$(Ax)}LowThresh-SP") {
    field(DESC, "Low limit threshold")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_LIMIT_THRESH_LOW")
    field(EGU,  "V")
    field(PREC, 2)
    field(LOPR, 0)
    field(HOPR, 3.3)
    field(PINI, "YES")
       
    # default is 1.24V (6144)
    field(VAL, 1.24)
    info(autosaveFields_pass0, "VAL HOPR LOPR")
    info(autosaveFields_pass1, "VAL HOPR LOPR")
    field(FLNK, "$(Sys){$(Dev)-Ax:$(Ax)}LowThresh-I")
}

# Limit thresholds (high)
record(ai, "$(Sys){$(Dev)-Ax:$(Ax)}HiThresh-I") {
    field(DESC, "High limit threshold")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_LIMIT_THRESH_HIGH")
    field(EGU,  "V")
    field(PREC, 2)
}

record(ao, "$(Sys){$(Dev)-Ax:$(Ax)}HiThresh-SP") {
    field(DESC, "High limit threshold")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1.0))ALM_LIMIT_THRESH_HIGH")
    field(EGU,  "V")
    field(PREC, 2)
    field(LOPR, 0)
    field(HOPR, 3.3)
    field(PINI, "YES")
       
    # default is 1.24V (6144)
    field(VAL, 1.24)
    info(autosaveFields_pass0, "VAL HOPR LOPR")
    info(autosaveFields_pass1, "VAL HOPR LOPR")
    field(FLNK, "$(Sys){$(Dev)-Ax:$(Ax)}HiThresh-I")
}
